// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tip {
  id       Int     @id @default(autoincrement())
  title    String?
  subTitle String?
  content  String @db.Text

  view_cnt Int  @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  UserTipLike UserTipLike[]
  Comments  Comment[]
  tags Tag[]
}

model Tag {
  id Int  @id @default(autoincrement()) 
  tips  Tip[]
  name  String @unique
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  email String  @unique
  password  String
  Comments  Comment[]
  UserTipLike UserTipLike[]
  UserCommentLike UserCommentLike[]
}

model UserTipLike {
  User User @relation(fields: [user_id], references: [id])
  user_id Int
  Tip Tip @relation(fields: [tip_id], references: [id])
  tip_id Int
  @@id([user_id,tip_id])
}
model UserCommentLike {
  User User @relation(fields: [user_id], references: [id])
  user_id Int
  Comment Comment @relation(fields: [comment_id], references: [id])
  comment_id Int
  @@id([user_id,comment_id])
}

model Comment {
  id       Int     @id @default(autoincrement())
  content  String @db.Text
  User User? @relation(fields: [user_id], references: [id])
  user_id Int

  Tip Tip? @relation(fields: [tip_id], references: [id]) //Tip과는 1:N 관계이다.
  tip_id Int

  parentCommentId Int?
  parentComment Comment? @relation("ParentChildComment", fields:[parentCommentId],references:[id])
  childComment Comment[] @relation("ParentChildComment")

  deleted_flag  Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  UserCommentLike UserCommentLike[]
}
